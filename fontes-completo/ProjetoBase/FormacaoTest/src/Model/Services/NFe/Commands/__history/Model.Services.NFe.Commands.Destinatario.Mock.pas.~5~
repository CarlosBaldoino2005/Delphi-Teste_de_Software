unit Model.Services.NFe.Commands.Destinatario.Mock;

interface

uses
  DUnitX.TestFramework,
  Delphi.Mocks,
  DAO.Interfaces,
  Entities.NotaFiscal,
  Model.Services.NFe.Interfaces,
  Model.Services.NFe,
  Model.Services.NFe.Command.Destinatario,
  System.SysUtils;

type
  [TestFixture]
  TModelServicesNFeCommandsDestinatarioMock = class

  private
    FNFe: iModelServicesNFe;
    FCommand: iModelServicesNFeCommand;
    FNotaFiscal: TEntitiesNotaFiscal;

  public
    [Setup]
    procedure Setup;

    [TearDown]
    procedure TearDown;

    [Test]
    procedure TestCommand;
  end;

implementation

{ TModelServicesNFeCommandsDestinatarioMock }

procedure TModelServicesNFeCommandsDestinatarioMock.Setup;
begin
  FNFe := TModelServicesNFe.New;
  FCommand := TModelServicesNFeCommandDestinatario.New(FNFe);
  FNotaFiscal := TEntitiesNotaFiscal.Create;
end;

procedure TModelServicesNFeCommandsDestinatarioMock.TearDown;
begin
  FreeAndNil(FNotaFiscal);
end;

procedure TModelServicesNFeCommandsDestinatarioMock.TestCommand;
var
  mockDao: TMock<iDAOEntity<TEntitiesNotaFiscal>>;
  mockNota: TMock<TEntitiesNotaFiscal>;
begin
  mockNota := TMock<TEntitiesNotaFiscal>.create;
  mockNota.Setup.WillReturn('5555').When.CNPJDestinatario;

  mockDao := TMock<iDAOEntity<TEntitiesNotaFiscal>>.Create;
  mockDao.Setup.WillReturn(mockNota).When.This;

  FNFe.DAO(mockDao);

  FCommand.Execute;

  Assert.AreEqual('5555', FNFe.Component.DestinatarioCNPJ);
end;

end.

