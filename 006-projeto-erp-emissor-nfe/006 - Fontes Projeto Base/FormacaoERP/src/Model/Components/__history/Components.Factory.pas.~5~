unit Components.Factory;

interface

uses
  Components.Interfaces,
  Components.Connections.Interfaces,
  Components.Connections.Factory;

type TComponents = class(TInterfacedObject, iModelComponentsFactory)

  private
    FConnections: iComponentsConnectionsFactory;

  protected
    function Connections: iModelComponentsConnections;

  public
    class function New: iModelComponentsFactory;

end;

implementation

{ TComponents }

function TComponents.Connections: iModelComponentsConnections;
begin
  if not Assigned(FConnections) then
    FConnections := TComponentsConnectionsFactory.New;
  result := FConnections.Connections;
end;

class function TComponents.New: iModelComponentsFactory;
begin
  result := Self.Create;
end;

end.
